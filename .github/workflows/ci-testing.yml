name: CI test, build, push

on:
  push:
    branches: [ testing ]

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
      rabbitmq:
        image: rabbitmq:3-management-alpine
        ports: ['5672:5672']

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dev deps
        run: |
          pip install -r backend/product_service/requirements-dev.txt
          pip install -r backend/order_service/requirements-dev.txt
          pip install -r backend/customer_service/requirements-dev.txt

      - name: Prepare test databases
        env:
          PGPASSWORD: postgres
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          until psql -h localhost -U postgres -tc "SELECT 1" >/dev/null 2>&1; do sleep 1; done
          for db in products orders customers; do
            psql -h localhost -U postgres -tc "SELECT 1 FROM pg_database WHERE datname='${db}'" | grep -q 1 || \
              psql -h localhost -U postgres -c "CREATE DATABASE ${db};"
          done

      - name: Run tests
        run: |
          pytest -q backend/product_service
          pytest -q backend/order_service
          pytest -q backend/customer_service

      - name: Docker login to ACR
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Build and push images
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/product_service:latest backend/product_service
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/order_service:latest backend/order_service
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/customer_service:latest backend/customer_service
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest frontend

          docker push ${{ secrets.ACR_LOGIN_SERVER }}/product_service:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/order_service:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/customer_service:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest
