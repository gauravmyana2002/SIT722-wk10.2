name: Stage 2 - Backend CD - Deploy to Staging

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NS: sit722-staging-${{ github.run_id }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group "${{ secrets.AKS_RESOURCE_GROUP }}" --name "${{ secrets.AKS_CLUSTER }}" --overwrite-existing

      # Attach ACR to AKS
      - name: Attach ACR to AKS
        run: |
          az aks update \
            --resource-group "${{ secrets.AKS_RESOURCE_GROUP }}" \
            --name "${{ secrets.AKS_CLUSTER }}" \
            --attach-acr "${{ secrets.ACR_NAME }}"

      - name: Create namespace
        run: kubectl create namespace "$NS" || true

      - name: Apply config + secrets
        run: |
          kubectl apply -n "$NS" -f week10/k8s/configmaps.yaml
          kubectl apply -n "$NS" -f week10/k8s/secrets.yaml

      - name: Apply databases
        run: |
          kubectl apply -n "$NS" -f week10/k8s/product-db.yaml
          kubectl apply -n "$NS" -f week10/k8s/order-db.yaml
          kubectl apply -n "$NS" -f week10/k8s/customer-db.yaml

      - name: Apply services (LB on 8001/8002/8003)
        run: |
          kubectl apply -n "$NS" -f week10/k8s/product-service.yaml
          kubectl apply -n "$NS" -f week10/k8s/order-service.yaml
          kubectl apply -n "$NS" -f week10/k8s/customer-service.yaml

      - name: Wait for Backend LoadBalancer IPs
        run: |
          echo "Waiting for Product, Order, and Customer LoadBalancer IPs (up to 5 minutes)..."
          PRODUCT_IP=""
          ORDER_IP=""
          CUSTOMER_IP=""

          for i in $(seq 1 60); do
            echo "Attempt $i/60 to get IPs..."
            PRODUCT_IP=$(kubectl get service product-service-w10 -n "$NS" -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null)
            ORDER_IP=$(kubectl get service order-service-w10 -n "$NS" -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null)
            CUSTOMER_IP=$(kubectl get service customer-service-w10 -n "$NS" -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null)

            if [[ -n "$PRODUCT_IP" && -n "$ORDER_IP" && -n "$CUSTOMER_IP" ]]; then
              echo "✅ All backend LoadBalancer IPs assigned!"
              echo "Product Service IP: $PRODUCT_IP"
              echo "Order Service IP: $ORDER_IP"
              echo "Customer Service IP: $CUSTOMER_IP"
              break
            fi
            sleep 5
          done

          if [[ -z "$PRODUCT_IP" || -z "$ORDER_IP" || -z "$CUSTOMER_IP" ]]; then
            echo "❌ Error: One or more LoadBalancer IPs not assigned after timeout."
            exit 1
          fi

          echo "PRODUCT_IP=$PRODUCT_IP"   >> $GITHUB_ENV
          echo "ORDER_IP=$ORDER_IP"       >> $GITHUB_ENV
          echo "CUSTOMER_IP=$CUSTOMER_IP" >> $GITHUB_ENV

      - name: External Health checks
        run: |
          for u in \
            "http://${PRODUCT_IP}:8001/health" \
            "http://${ORDER_IP}:8002/health" \
            "http://${CUSTOMER_IP}:8003/health"; do
            echo "GET $u"
            curl -sf "$u" || exit 1
          done
